x <- 1:4
y <- 2:3
x + y
class(x+y)
list.dirs()
getwd()
load("hw1_data.csv")
mydata<-load("hw1_data.csv")
my_data = read.csv("hw1_data.csv", header = TRUE)
my_data
my_data[152:153, :]
my_data[152:153]
my_data[152:153, 1:6]
my_data(!is.na(mydata(1:153, 1)))
my_data[!is.na(mydata(1:153, 1))]
my_data[!is.na(mydata[1:153, 1])]
my_data[is.na(my_data[1:153,1])]
my_data[1:153,1]
sum(is.na(my_data[1:153,1]))
ozone <- !is.na(my_data[1:153,1])
ozone
ozone <- my_data[!is.na(my_data[1:153,1])]
ozone <- ozone[!is.na(my_data[1:153,1])]
ozone
ozone <- mydata[!is.na(my_data[1:153,1]), 1]
ozone <- my_data[!is.na(my_data[1:153,1]), 1]
ozone
mean(ozone)
y <- mydata[my_data[,1]>=31]
y <- my_data[my_data[,1]>=31]
as.data.frame(my_data)
y <- as.data.frame(my_data)
y
mean(!is.na(y[, 1]))
mean(y[,1])
y[,1]
z <- y[y[,1]>31]
z <- y[y[,"Ozone"]>31]
z <- y[y[,Ozone]>31]
z <- y[y[,Ozone]>31,]
z <- y[y[,1]>31,]
z
z <- y[y[,1]>31 & !is.na(y[,1]),]
z
z <- y[y[,1]>31 & !is.na(y[,1]) & y[,4]>90,]
z
mean(z[,2])
y
y[Y[,5]==6]
y[y[,5]==6]
y[y[,5]==6,]
y[y[,5]==6,4]
mean(y[y[,5]==6,4])
y[y[,5]==5,]
max(y[y[,5]==5,1])
y[y[,5]==5,1]
max(y[y[,5]==5,1])
max(y[y[,5]==5 & !is.na(y[,1]),1])
class(c(4, TRUE))
1:4 + 2:3
class(1:4 + 2:3)
my_data
y
sum(is.na(my_data[1:153,1]))
z <- y[y[,1]>31 & !is.na(y[,1]) & y[,4]>90,]
z
mean(z[,2])
mean(y[y[,5]==6,4])
max(y[y[,5]==5 & !is.na(y[,1]),1])
1:4 + 2:3
class(1:4 + 2:3)
class(1:4 + 2)
1:4 + 2
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x
sum(is.na(my_data[1:153,1]))
mean(y[y[,5]==6,4])
x<-4L
class(x)
x <- c(4, TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2:3
x + y
class(x+y)
x <- c(17, 14, 4, 5, 13, 12, 10)
list.dirs()
read.csv(hw1_data.R)
read.csv("hw1_data.R")
load("hw1_data.csv")
getwd()
y<-read.csv("hw1_data.R")
y<-read.csv("hw1_data.csv")
y
sum(y[is.na(y[,1])],)
is.na(y[,1])
sum(is.na(y[,1]))
y[is.na(y[,1]),]
y[is.na(y[,1]),1]
y[!is.na(y[,1]),1]
mean(y[!is.na(y[,1]),1])
z <- y[y[,1]>31]
z <- y[y[,1]>31,]
z
z <- y[y[,1]>31 & y[,4]>90,]
z
mean(z[,2])
z <- z[!is.na(z[,2])]
z <- z[!is.na(z[,2]),]
z
mean(z[,2])
y
a<-y[y[,5]==5]
a<-y[y[,5]=5]
a<-y[y[,5]=5,]
a<-y[y[,5]==5,]
a
mean(y[,4])
a<-y[y[,5]==6,]
a
mean(a[,4])
a<-y[y[,5]==5,]
a
max(a[,1])
max(a[!is.na(a[,1]),1])
x<-4
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[1]]
x <- 1:4
y <- 2:3
x + y
class(x + y)
y
y<-read.csv("hw1_data.R")
y<-read.csv("hw1_data.csv")
y
class(c(4, TRUE))
x <- 1:4
y <- 2:3
x+y
class(x+y)
library(swirl)
Nico
swirl()
TRUE==TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE,
| FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10
ints <- sample(10)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints < 0)
all(ints > 0)
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){X+1},6)
evaluate(function(x){X+1}, 6)
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Exercise done!")
submit()
submit()
submit()
mad_libs(place = "Arguenos", adjective = "familial", noun = "my noun")
submit()
'Hello' %p% 'student!'
submit()
'Hello' %p% 'student!'
'Hello' %p% 'student!'
submit()
'I' %p% 'love' %p% 'R!'
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(cls_list, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
laaply(flags_colors, sum)
lapply(flags_colors, sum)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
q()
library(swirl)
swirl()
lapply(unique_vals, length)
info()
sapply(unique_vals, length)
sapply(flags, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
d1 <- Sys.Date()
class(Date)
class(d1)
unclass(d1)
d1
d2 = as.Date("1969-01-01"
d2 = as.Date("1969-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
weekdays(t1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
f
g
f
h
e <- globalenv ()
e <- globalenv()
e
class(e)
unclass(e)
c=rbind(c(1, -1/4), c(-1/4, 1))
source('C:/Users/CARAYON/Google Drive/Cours/Coursera/John Hopkins University/Week3/cachematrix.R')
cacheSolve(makeCacheMatrix(x))
makeCacheMatrix(x)
cacheSolve(x)
cacheSolve(makeCacheMatrix(x))
A <- makeCacheMatrix(x)
cacheSolve(A)
source('C:/Users/CARAYON/Google Drive/Cours/Coursera/John Hopkins University/Week3/cachematrix_eval1.R')
A <- makeCacheMatrix(x)
cacheSolve(A)
source('C:/Users/CARAYON/Google Drive/Cours/Coursera/John Hopkins University/Week3/cachematrix_eval2.R')
cacheSolve(A)
A <- makeCacheMatrix(x)
cacheSolve(A)
source('C:/Users/CARAYON/Google Drive/Cours/Coursera/John Hopkins University/Week3/cachematrix_eval2.R')
source('C:/Users/CARAYON/Google Drive/Cours/Coursera/John Hopkins University/Week3/cachematrix_eval2.R')
A <- makeCacheMatrix(x)
cacheSolve(A)
data
A <- makeCacheMatrix(x)
cacheSolve(A)
A = cbind(c(1,2,3), c(4,5,6))
a
a
A
A = cbind(c(1,2,3), c(4,5,6), c(7,8,9))
A
A <- makeCacheMatrix(x)
cacheSolve(A)
source('C:/Users/CARAYON/Google Drive/Cours/Coursera/John Hopkins University/Week3/cachematrix_eval4.R')
source('C:/Users/CARAYON/Google Drive/Cours/Coursera/John Hopkins University/Week3/cachematrix_eval4.R')
A = cbind(c(1,2,3), c(4,5,6), c(7,8,9))
A <- makeCacheMatrix(x)
cacheSolve(A)
A
source('C:/Users/CARAYON/Google Drive/Cours/Coursera/John Hopkins University/Week3/cachematrix.R')
source('C:/Users/CARAYON/Google Drive/Cours/Coursera/John Hopkins University/Week3/cachematrix.R')
A = cbind(c(1,2,3), c(4,5,6), c(7,8,9))
A <- makeCacheMatrix(x)
cacheSolve(A)
cacheSolve(x)
cacheSolve(makeCacheMatrix(A))
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
best("SC", "heart attack")
set.seed(1)
rpois(5, 2)
?rnorm
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
?rnorm
0.5 + 2*x
e
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
system.time()
library(swirl)
swirl()
ls()
plants
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4, replace = TRUE)
sample(1:6,4, replace = TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1,100,0.7)
flips2 <- rbinom(rep(1, 100), prob = 0.7)
flips2 <- rbinom(rep(1, 100), size = 100, prob = 0.7)
flips2 <- rbinom(1, 100, prob = 0.7)
flips2 <- rbinom(n = 100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnomr
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
rpois(n = 5, lambda = 10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plots(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$dist, y = cars$speed, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot", )
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
load(mtcars)
mtcars
data(mtcars)
?boxplot
boxplt(formula = mpg ~ cyl, data = mtcars)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
ls()
rm(list = ls())
getwd()
setwd("C:\Users\CARAYON\Google Drive\Cours\Coursera\John Hopkins University\Week4")
setwd("C:\\Users\\CARAYON\\Google Drive\\Cours\\Coursera\\John Hopkins University\\Week4")
getwd()
A <- data("hospital-data.csv")
ls
list.dirs()
getwd()
list.files()
best("SC", "heart attack")
A <- read.csv("hospital-data.csv")
class(A)
head(A)
?best
rm(list = ls())
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
nrow(outcome)
names(outcome)
outcome[,11] <- as.numeric(outcome[,11])
hist(outcome[,11])
source("best.R")
> best("TX", "heart attack")
source('C:/Users/CARAYON/Google Drive/Cours/Coursera/John Hopkins University/Week4/best.R')
best("TX", "heart attack")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
source('C:/Users/CARAYON/Google Drive/Cours/Coursera/John Hopkins University/Week4/rankhospital.R')
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
source('C:/Users/CARAYON/Google Drive/Cours/Coursera/John Hopkins University/Week4/rankall.R')
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
